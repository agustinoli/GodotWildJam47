name: Build & Publish Game

on:
  push:
    branches: [feat/add-cicd]

jobs:
  export_game:
    runs-on: ubuntu-latest
    name: Export Game Job

    steps:
      - name: checkout source code
        uses: actions/checkout@v2.3.2

      - name: export game
        uses: firebelley/godot-export@v4.1.0
        with:
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/3.4.4/Godot_v3.4.4-stable_linux_headless.64.zip
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/3.4.4/Godot_v3.4.4-stable_export_templates.tpz
          relative_project_path: .
          archive_output: true
          verbose: true

      - name: upload files
        uses: actions/upload-artifact@v3
        with:
          path: .local/share/godot/archives/*
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

#      # Upload exported builds to artifacts
#      - name: upload windows build
#        uses: actions/upload-artifact@v2
#        with:
#          name: windows
#          path: ./builds/windows/release
#
#      - name: upload macos build
#        uses: actions/upload-artifact@v2
#        with:
#          name: macos
#          path: ./builds/macos/release
#
#      - name: upload linux build
#        uses: actions/upload-artifact@v2
#        with:
#          name: linux
#          path: ./builds/linux/release
#
#      - name: upload html5 build
#        uses: actions/upload-artifact@v2
#        with:
#          name: html5
#          path: ./builds/html5/release
#
#  publish_game:
#    runs-on: ubuntu-latest
#    name: Publish Game To Itch.io
#    needs: [export_game]
#    steps:
#      # Download all published artefacts
#      - name: download windows build
#        uses: actions/download-artifact@v2
#        with:
#          name: windows
#          path: ./builds/windows/release
#
#      - name: download macos build
#        uses: actions/download-artifact@v2
#        with:
#          name: macos
#          path: ./builds/macos/release
#
#      - name: download linux build
#        uses: actions/download-artifact@v2
#        with:
#          name: linux
#          path: ./builds/linux/release
#
#      - name: download html5 build
#        uses: actions/download-artifact@v2
#        with:
#          name: html5
#          path: ./builds/html5/release
#
#      # Publish exported artifacts to Itch.io
#      - name: publish windows build
#        uses: josephbmanley/butler-publish-itchio-action@master
#        env:
#          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
#          CHANNEL: windows
#          ITCH_GAME: ${{ secrets.ITCH_GAME }}
#          ITCH_USER: ${{ secrets.ITCH_USERNAME }}
#          PACKAGE: ./builds/windows/release
#
#      - name: publish macos build
#        uses: josephbmanley/butler-publish-itchio-action@master
#        env:
#          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
#          CHANNEL: osx
#          ITCH_GAME: ${{ secrets.ITCH_GAME }}
#          ITCH_USER: ${{ secrets.ITCH_USERNAME }}
#          PACKAGE: ./builds/macos/release
#
#      - name: publish linux build
#        uses: josephbmanley/butler-publish-itchio-action@master
#        env:
#          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
#          CHANNEL: linux
#          ITCH_GAME: ${{ secrets.ITCH_GAME }}
#          ITCH_USER: ${{ secrets.ITCH_USERNAME }}
#          PACKAGE: ./builds/linux/release
#
#      - name: publish html5 build
#        uses: josephbmanley/butler-publish-itchio-action@master
#        env:
#          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
#          CHANNEL: HTML5
#          ITCH_GAME: ${{ secrets.ITCH_GAME }}
#          ITCH_USER: ${{ secrets.ITCH_USERNAME }}
#          PACKAGE: ./builds/html5/release
#
#  clean_up:
#    runs-on: ubuntu-latest
#    name: Clean up artifacts
#    needs: [publish_game]
#    steps:
#      # Delete all artifacts
#      - uses: geekyeggo/delete-artifact@v1
#        with:
#          name: |
#            windows
#            macos
#            linux
#            html5
